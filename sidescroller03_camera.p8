pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- sidescroller series
-- example 03: camera
-- by matthew dimatteo

-- tab 0: game loop
-- tab 1: camera function
-- tab 2: player functions
-- tab 3: map collision function

-- runs once at start
function _init()

	-- physics
	grav=0.3
	fric=0.85

	-- player default start pos
	plyr_start_x=16
	plyr_start_y=0

	-- camera position
	camx=0
	camy=0

	-- map: 128 px / screen (16 tiles x 8 px per tile) x 8 screens = 1024 px
	map_start=0
	
	-- map tile flags
	solid=0
	platform=1

	-- object initialization
	make_plyr()

end -- end _init()

-- runs 30x per second
function _update()
	move_plyr()
	move_cam()
end -- end _update()

-- runs 30x per second
function _draw()
	cls() -- clear screen
	map() -- draw the map
	
	-- print player position
	print("plyr: "..flr(plyr.x)..","..flr(plyr.y),camx+71,camy+2,7) 
	
	-- print camera position
	print("cam:  "..flr(camx)..","..flr(camy),camx+75,camy+10,7) 
	
	-- draw box at camera origin
	rect(camx,camy,camx+8,camy+8)
	
	-- draw the player
	spr(plyr.n,plyr.x,plyr.y,1,1,plyr.flip)
end -- end _draw()
-->8
-- camera function
function move_cam()

	camx=plyr.x-64+plyr.w/2 -- center camera on player

	-- constrain to left edge
	if camx<map_start then 
		camx=map_start
	end -- end if at map_start

	camera(camx,camy) -- position the camera

end -- end move_cam()
-->8
-- player functions

-- make_plyr()
function make_plyr()

	-- player object
	plyr={}
	
	-- sprite number
	plyr.n=1

	-- starting position (in px)
	plyr.x=plyr_start_x
	plyr.y=plyr_start_y

	-- width and height (in px)
	plyr.w=8
	plyr.h=8

	-- sprite direction (x-axis)
	plyr.flip=false

	-- change in x/y
	plyr.dx=0
	plyr.dy=0

	-- max speed
	plyr.max_dx=2
	plyr.max_dy=3

	-- acceleration
	plyr.xspd=0.5
	plyr.yspd=4

	-- player state
	plyr.landed=false
	
end -- end make_plyr()

-- move plyr
function move_plyr()

	-- dx and dy are used to 
	-- calculate how much the
	-- player will move each frame
	
	-- multiplying dx by a friction
	-- value less than 1 slows it
	plyr.dx*=fric 
	
	-- inc change in y by gravity
	-- to make player fall
	plyr.dy+=grav 
	
	-- the player's x and y values
	-- must be incremented by dx
	-- and dy, respectively, at
	-- the end of this function
	-- in order to move

	-- hold left arrow
	if btn(⬅️) then 
	
		-- substract from change in x
		-- to move left
		plyr.dx-=plyr.xspd
		
		-- flip player sprite since
		-- it faces right by default
		plyr.flip=true
		
	end -- end if btn(⬅️)

	-- hold right arrow
	if btn(➡️) then 
	
		-- add to change in x to
		-- move right
		plyr.dx+=plyr.xspd
		
		-- unflip the sprite in case
		-- the player had been
		-- moving left
		plyr.flip=false
		
	end -- end if btn(➡️)

	-- press up or x to jump
	-- (btnp does not require key
	-- to be held down)
	if (btnp(⬆️) or btnp(❎))
	
	-- w/o the second condition,
	-- the player would be able 
	-- to jump indefinitely
 	and plyr.landed then
 
		-- subtract from change in y
		-- to move up on the screen
		plyr.dy-=plyr.yspd
		
		-- set boolean to false to
		-- prevent double jump
		plyr.landed=false
		
	end -- end if btnp(⬆️/❎)

	-- stop falling when touching
	-- a solid tile below player
	if mcollide(plyr,"down",solid)
	and plyr.dy > 0
	then
		plyr.landed=true
		plyr.dy=0 -- stop falling
		
		-- because of vertical speed,
		-- the player can fall a few
		-- px into the floor. this
		-- calculates how many px and
		-- re-adjusts y (credit to 
		-- nerdyteachers.com for this
		-- formula)
		plyr.y-=
		((plyr.y+plyr.h+1)%8)-1

	end -- end if mcollide down

	-- stop moving up when there's
	-- collision with a solid tile 
	-- above the player
	if mcollide(plyr,"up",solid)
	and plyr.dy < 0
	then
		plyr.landed=true 
		plyr.dy=0 -- stop jumping
	end -- end if mcollide up

	-- set speed limit
	if big == true then
		maxdx=2
	else
		maxdx=3
	end
	
	-- apply speed limit
	if plyr.dx < -maxdx then
		plyr.dx = -maxdx
	end
	if plyr.dx > maxdx then
		plyr.dx = maxdx
	end

	-- correct position on left
	-- and right
	fixl=1-((plyr.x+1)%8)
	fixr=((plyr.x+plyr.w+1)%8)-1
	
	-- prevent overcorrection
	if abs(fixl) > 4 then
		fixl = 8-abs(fixl)
	end
	
	-- collide with solid on left
	if plyr.dx < 0 and
	mcollide(plyr,"left",solid)
	then
		plyr.dx=0 -- stop moving l/r
			
		-- don't get stuck in wall
		plyr.x+=fixl
	end -- end if plyr.dx<0

 	-- collide with solid on right
	if plyr.dx > 0 and
	mcollide(plyr,"right",solid)
	then
		plyr.dx=0 -- stop moving l/r

		-- don't get stuck in wall
		plyr.x-=fixr
	end -- end if plyr.dx>0

	-- update x,y pos by dx,dy
	plyr.x+=plyr.dx
	plyr.y+=plyr.dy

	-- keep player on screen
	if plyr.x<0 then 
		plyr.x=0
	end -- end if x<0

	-- jumping sprite
	if plyr.landed == false then 
		plyr.n=6
	end -- end if false

	-- default sprite
	if plyr.landed then 
		plyr.n=1
	end -- end if plyr.landed

end -- end move_plyr()
-->8
-- map collision function
function mcollide(obj,dir,flag)
	
	-- this function checks two
	-- points on the tile adjacent
	-- to the player: hx1,hy1 and
	-- hx2,hy2 -- we can then use
	-- these coordinates to look up
	-- the adjacent tile's sprite
	-- number and whether it has
	-- a flag turned on
	
	-- position of tile to left
	if dir=="left" then 
		hx1=obj.x-1
		hy1=obj.y

		hx2=hx1
		hy2=obj.y+obj.h-1
		
	-- position of tile to right
	elseif dir=="right" then 
		hx1=obj.x+obj.w
		hy1=obj.y

		hx2=hx1 
		hy2=obj.y+obj.h-1
	
	-- position of tile above
	elseif dir=="up" then 
		hx1=obj.x
		hy1=obj.y-1

		hx2=obj.x+obj.w-1 
		hy2=hy1 
		
	-- position of tile below
	elseif dir=="down" then 
		hx1=obj.x
		hy1=obj.y+obj.h

		hx2=obj.x+obj.w-1
		hy2=hy1
	end -- end if/elseif

	-- get sprite number of
	-- adjacent tile (divide by 8
	-- to convert from pixel
	-- coordinate to tile coordinate)
	hsp1=mget(flr(hx1/8),flr(hy1/8)) 
	hsp2=mget(flr(hx2/8),flr(hy2/8)) 

	-- check flag on sprite for 
	-- adjacent tile
	local has_flag1=fget(hsp1,flag) 
	local has_flag2=fget(hsp2,flag) 

	if has_flag1 or has_flag2 then
		return true
	else
		return false
	end -- end if/else

end -- end mcollide()

-- use this function in
-- move_plyr() -- for example:
-- if mcollide(plyr,"down",0)
-- checks for flag 0 below the
-- player
__gfx__
00000000000000000000000000000000000000000000000000000000009499000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000008800094999900750057000000000000000000000000000000000000000000000000000000000
00700700000008000000080000000800000008000000080000000880990999990576675000000000000000000000000000000000000000000000000000000000
00077000000008800000088000000880000008800000088080008808999999990065560000000000000000000000000000000000000000000000000000000000
00077000000088080000880880008808000088080000808888888888707999990065560000000000000000000000000000000000000000000000000000000000
00700700008888888088888808888888008888c80088888808888880000999990576675000000000000000000000000000000000000000000000000000000000
00000000088888800888888000888880088888c0088888e000800800099999900750057000000000000000000000000000000000000000000000000000000000
00000000808008000008008000800800808008008080080000000000009999000000000000000000000000000000000000000000000000000000000000000000
00000000080000800000000000000000000000000000000000080800000000000000000000000000000000000000000000000000000000000000000000000000
00000000888008880000000000000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880000000000000bb0007777000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008888888800330000000009b0078888700000088000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880083800000009900078788700000880800000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888800888880000099000078888700088888800000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000888800088888000099000000788870088888e000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880000080800009900000000777008080080000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000aa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aaa000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000aaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbbbbbbbbbbbbbbbbbb000000000000000000000000000000005555555544444444000000009999999999999999999999990000000000000000
00000000bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000000000000000000066666666ffffffff000000009999999999999999999999990000000000000000
000000003333333333333333333333330000000000000000000000000000000066666666ffffffff00000000aaaaaaaaaaaaaaaaaaaaaaaa0000000000000000
0000000034444444444444444444444300000000000000000000000000000000555555554444444400000000a4444444444444444444444a0000000000000000
000000003444444444444444444444430000000000000000000000000000000066666666ffffffff00000000a4444444444444444444444a0000000000000000
000000003444444444444444444444430000000000000000000000000000000066666666ffffffff00000000a4444444444444444444444a0000000000000000
0000000034444444444444444444444300000000000000000000000000000000555555554444444400000000a4444444444444444444444a0000000000000000
0000000034444444444444444444444300000000000000000000000000000000005555000044440000000000a4444444444444444444444a0000000000000000
bbbbbbbb344444444444444444444443bbbbbbbbbbbbbbbb333333330000000000566500004ff40099999999a4444444000000004444444a9999999999999999
bbbbbbbb344444444444444444444443bbbbbbbbbbbbbbbbc33ee33c0000000000566500004ff40099999999a4444444000000004444444a9999999999999999
333333333444444444444444444444433333333333333333cc3333cc0000000000566500004ff400aaaaaaaaa4444444000000004444444aaaaaaaaaaaaaaaaa
444444444444444444444444444444444444444334444444cccccccc0000000000566500004ff400444444444444444400000000444444444444444aa4444444
444444444444444444444444444444444444444334444444cccccccc0000000000566500004ff400444444444444444400000000444444444444444aa4444444
444444444444444444444444444444444444444334444444cccccccc0000000000566500004ff400444444444444444400000000444444444444444aa4444444
444444444444444444444444444444444444444334444444cccccccc0000000000566500004ff400444444444444444400000000444444444444444aa4444444
444444444444444444444444444444444444444334444444cccccccc0000000000566500004ff400444444444444444400000000444444444444444aa4444444
000000007070707000000000888888884444444334444444cccccccc111111110000000000000000777777777777777777777777000000004444444aa4444444
000000000707070700000000888888884444444334444444cccccccc111111110000000000000000777777777777777777777777000000004444444aa4444444
000000007070707000000000000660004444444334444444cccccccc111111110000000000000000666666666666666666666666000000004444444aa4444444
000000000707070700000000000660004444444334444444cccccccc111111110000000000000000111111166111111111111111000000004444444aa4444444
000000007070707000000000000660004444444334444444cccccccc111111110000000000000000111111166111111111111111000000004444444aa4444444
000000000006600088888888000660004444444334444444cccccccc111111110000000000000000111111166111111111111111000000004444444aa4444444
000000000006600088888888000660004444444334444444cccccccc111111110000000000000000111111166111111111111111000000004444444aa4444444
000000000006600000066000000660004444444334444444cccccccc111111110000000000000000111111166111111111111111000000004444444aa4444444
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111166111111100000000000000000000000000000000
__gff__
0000000000000041410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010100000303000909090000010100010101210000000909800909090000111101010000000005050500090900000000000000000000010100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000554242424242425400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000048480000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000484858580000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000004848585858580000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000041424300000000005858585858580000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000065526400000000005858585858580000000000655252525252526400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050505050505050505051525342424250505050504242425050505050515252525252525300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5252525252525252525252525252525252525252525252525252525252525252525252525252525200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5252525252525252525252525252525252525252525252525252525252525252525252525252525200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5252525252525252525252525252525252525252525252525252525252525252525252525252525200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100002355023550235502b5502b5502b55000000000002d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000260502e050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002d0502d050270502605021050200501b05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001605007050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002073027750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002405020050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200001b7501f7501f7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500000d7500d750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
