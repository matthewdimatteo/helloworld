pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- sidescrolling platformer
-- no-physics example
-- by matthew dimatteo

-- tab 0: game loop
-- tab 1: make player
-- tab 2: move player
-- tab 3: map collision
-- tab 4: debug hud

-- runs once at start
-- variables, objects
function _init()
	debug = true -- debug mode
	make_plyr() -- tab 1
end -- /function _init()

-- runs 30x/sec
-- movement, calculation
function _update()
	move_plyr() -- tab 2
	
	-- press z to toggle debug mode
	if btnp(🅾️) then
		if debug == true then
			debug = false
		else
			debug = true
		end -- /if debug
	end -- /if btnp(🅾️)
	
end -- /function _update()

-- runs 30x/sec
-- output/graphics
function _draw()
	cls() -- refresh screen
	map() -- draw map
	
	-- draw player sprite
	spr(plyr.n,plyr.x,plyr.y,plyr.w/8,plyr.h/8,plyr.flip)
	
	-- show debug screen
	if debug then
		debug_scrn() -- tab 4
	else
		print("press z for debug mode",19,2,5)
	end -- /if debug

end -- /function _draw()
-->8
-- make player
-- call this function in _init()
function make_plyr()
	plyr = {} -- table
	
	plyr.n = 1 -- sprite number
	plyr.x = 3*8 -- 24 pixels
	plyr.y = 14*8 -- 112 pixels
	plyr.w = 8 -- width 8 px
	plyr.h = 8 -- height 8 px
	
	-- l/r movement
	plyr.spd = 2 -- base speed
	plyr.dir = ➡️ -- direction
	plyr.flip = false -- flip x
	
	-- track if plyr is jumping
	plyr.jumping = false
	
	-- number of jumps left
	plyr.basejumps = 2
	plyr.jumps = plyr.basejumps
	
	-- base jump force
	plyr.jmax = 5.4
	
	-- active jump force
	plyr.j = plyr.jmax
	
	-- jump force decay rate
	plyr.decay = 0.4
	
	-- base fall speed
	plyr.fmax = 1.8 
	
	-- active fall speed
	plyr.fall = plyr.fmax
	
	-- collision hitbox coords
	rx1=0 ry1=0 rx2=0 ry2=0
end -- /function make_plyr()
-->8
-- move player
-- call this function in _update()
function move_plyr()

	-- initiate jump
	if (btnp(⬆️) or btnp(❎))
	and plyr.jumps > 0
	then
		-- set jump state
	 plyr.jumping = true
	 
	 -- use 1 jump
	 plyr.jumps -= 1
	 
	 -- reset jump force
	 plyr.j = plyr.jmax
	end -- /if btnp(⬆️/❎)
	
	-- apply jump force
	if plyr.jumping then
	
		-- subtract from y position
		-- to move higher on screen
		plyr.y -= plyr.j
		
		-- reduce jump force over time
		plyr.j -= plyr.decay
		
		-- nullify fall rate while
		-- jumping to avoid
		-- compounding with decay
		plyr.fall = 0
	end -- /if jumping
	
	-- stop falling when landed
	if mcollide(plyr,⬇️,0) then
	
		-- reset player state
		plyr.jumping = false
		
		-- reset jump counter
		plyr.jumps = plyr.basejumps
		
		-- reset jump force for
		-- next jump
		plyr.j = plyr.jmax
		
		-- correct y position if
		-- fell into ground
		plyr.y -= plyr.y%8
		
	-- if not touching ground,
	-- make player fall
	else
		-- reset fall rate to base
		plyr.fall = plyr.fmax
		
		-- apply fall rate
		plyr.y += plyr.fall
	end -- /if mcollide
	
	-- move left
	-- (if not blocked by a wall)
	if btn(⬅️) and
	not mcollide(plyr,⬅️,0)
	then
		-- subtract from x position
		plyr.x -= plyr.spd
		
		-- track player's direction
		plyr.dir = ⬅️
		
		-- flip the sprite
		plyr.flip = true
	end -- /if btn(⬅️)
	
	-- move right
	-- (if not blocked by a wall)
	if btn(➡️) and
	not mcollide(plyr,➡️,0)
	then
		-- add to x position
		plyr.x += plyr.spd
		
		-- track player's direction
		plyr.dir = ➡️
		
		-- un-flip sprite
		plyr.flip = false
	end -- /if btn(➡️)
	
end -- /function move_plyr()
-->8
-- map collision

-- call this function in 
-- move_plyr() in an if
-- statement, like this:

-- if mcollide(plyr,⬇️,0) then
-- // run code for what happens
-- // when collision occurs
-- end 
function mcollide(obj,dir,flag)
	
	-- determine location of map
	-- tile relative to player
	-- (depending on direction)
	if dir == ⬅️
	or dir == "left" then
		x1 = obj.x-1
		y1 = obj.y
		x2 = x1
		y2 = y1+obj.h-1
	elseif dir == ➡️ 
	or dir == "right" then
		x1 = obj.x+obj.w
		y1 = obj.y
		x2 = x1
		y2 = y1+obj.h-1
	elseif dir == ⬆️
	or dir == "up" then
		x1 = obj.x
		y1 = obj.y-1
		x2 = x1+obj.w-1
		y2 = y1
	elseif dir == ⬇️
	or dir == "down" then
		x1 = obj.x
		y1 = obj.y+obj.h
		x2 = x1+obj.w-1
		y2 = y1
	end -- /if-elseif dir
	
	-- map coords to hitbox
	-- (for debug purposes)
	rx1=x1
	ry1=y1
	rx2=x2
	ry2=y2
	
	-- find sprite number of
	-- map tile adjacent to plyr
	-- (check 4 points)
	n1=mget(flr(x1/8),flr(y1/8))
	n2=mget(flr(x2/8),flr(y1/8))
	n3=mget(flr(x1/8),flr(y2/8))
	n4=mget(flr(x2/8),flr(y2/8))
	
	-- check for flag on that
	-- sprite (at all 4 points)
	f1=fget(n1,flag)
	f2=fget(n2,flag)
	f3=fget(n3,flag)
	f4=fget(n4,flag)
	
	-- if at least 1 of the 4
	-- points is a sprite with
	-- the flag, then collision
	-- is true; return true/false
	if f1 or f2 or f3 or f4 then
		return true
	else
		return false
	end -- /if f1 or f2 or f3 or f4
	
end --/function mcollide()
-->8
-- debug hud
-- call this function in _draw()
function debug_scrn()

	-- draw collision hitbox
	if mcollide(plyr,⬅️,0)
	or mcollide(plyr,➡️,0)
	or mcollide(plyr,⬇️,0)
	then
		rect(rx1,ry1,rx2,ry2,8)
	end -- /if mcollide
	
	-- display active btn presses
	c=10 -- color
	if btn(⬅️) then
		print("⬅️",plyr.x-10,plyr.y+2,c)
	end --/if btn(⬅️)
	
	if btn(➡️) then
		print("➡️",plyr.x+10,plyr.y+2,c)
	end --/if btn(➡️)
	
	if btn(⬆️) then
		print("⬆️",plyr.x,plyr.y-8,c)
	end --/if btn(⬆️)
	
	if btn(❎) then
		print("❎",plyr.x,plyr.y-8,c)
	end --/if btn(❎)
	
	-- debug mode instructions
	print("debug mode (z to toggle)",12,2,5)
	
	-- print player x,y position
	coords = flr(plyr.x)..","..flr(plyr.y)
	print(coords,plyr.x-5,plyr.y+10,7)
	
	-- print jump data
	print("jumps left: "..plyr.jumps,12,10,0)
	print("jump force: "..plyr.j,12,18,0)
	if plyr.fall then
		print("fall rate:  "..plyr.fall,12,26,0)
	end -- /end if plyr.fall > 0
	
end -- /function debug_scrn()
__gfx__
0000000000aaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aaaaa5aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aaaaaeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000044644333000000003333333333333333333333330000000033344644000000000000000000000000000000000000000000000000
00000000000000000000000044443333000000003333333333333333333333330000000033334444000000000000000000000000000000000000000000000000
0000000000000000000000004e4443330000000033333333333333333333333300000000333444e4000000000000000000000000000000000000000000000000
00000000000000000000000044433333000000003334343443443434434343330000000033333444000000000000000000000000000000000000000000000000
00000000000000000000000044443333000000003346444444443444444464330000000033334444000000000000000000000000000000000000000000000000
000000000000000000000000449443330000000033344494449444f4494443330000000033344944000000000000000000000000000000000000000000000000
00000000000000000000000044443333000000003344e44444444444444e44330000000033334444000000000000000000000000000000000000000000000000
0000000000000000000000004f4333330000000033444f4444444e4444f4443300000000333334f4000000000000000000000000000000000000000000000000
00000000cccccccccc7777cc44443333333333333344444444444444444444333333333333334444000000000000000000000000000000000000000000000000
00000000ccccccccc777777c44443333333333333346444444444644444444333333333333334444000000000000000000000000000000000000000000000000
00000000cccccccc7777777744e443333333333334444e444494444444e444433333333333344e44000000000000000000000000000000000000000000000000
00000000cccccccc7777777744444444434434344444444444444444444446444344343444444444000000000000000000000000000000000000000000000000
00000000cccccccc7777777744444444444434444444444464444444444444444444344444444444000000000000000000000000000000000000000000000000
00000000ccccccccc777777c44449444449444f44449444444444e4444449444449444f444494444000000000000000000000000000000000000000000000000
00000000cccccccccccccccc4f44444444444444444444f444f444444f44444444444444444444f4000000000000000000000000000000000000000000000000
00000000cccccccccccccccc4444446444444e4446444444444444464444446444444e4446444444000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000001000101010001000000000000000000010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1721212121212121212121212121211521212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212221212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121222121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321222121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212121212121212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121212115161721212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1321212121211525262717212121211921212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2316161616162526262627161616162516161616161616161616161616161616161616161616162121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
