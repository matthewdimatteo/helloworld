pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- sidescroller series
-- example 01: map collision
-- by matthew dimatteo

-- tab 0: game loop
-- tab 1: player functions
-- tab 2: map collision function
-- tab 3: swap sprite function

-- runs once at start
function _init()

	-- global variables and objects
	solid=0 -- map tile flag
	
	-- 8x8px sprite if false
	-- 24x24px sprite if true
	big=false
	make_plyr() 
	
	-- physics forces
	grav=0.3
	fric=0.85

	-- coordinates to draw hitbox
	hx1=0
	hy1=0
	hx2=0
	hy2=0
	hsp1=0
	hsp2=0

end -- end _init()

-- runs 30x per second
function _update()
	move_plyr() -- tab 1
	set_hitbox() -- tab 2 
	swap_sprite() -- tab 3	
end -- end _update()

-- runs 30x per second
function _draw()
	cls() -- clear screen
	map() -- draw the map
	
	-- draw player
	spr(plyr.n,plyr.x,plyr.y,
	plyr.sw,plyr.sh,plyr.flip)

	-- instructions: z to swap spr
	if big==false then
		print("press z for big plyr sprite",2,2,7)
	elseif big==true then
		print("press z for small plyr sprite",2,2,7)
	end
		
	-- print player pixel and tile position
	print("pixel:  "..flr(plyr.x)..","..flr(plyr.y),2,10,10)
	if plyr.tile_x 
	and plyr.tile_y then
		print("tile:   "..plyr.tile_x..","..plyr.tile_y,2,18,10)
	end -- end if

	-- draw collision hitboxes
	rect(hx1,hy1,hx1,hy1,8) 
	rect(hx2,hy2,hx2,hy2,8)

	-- print left collision info
	if mcollide(plyr,"left",solid) then 
		print("collision on left with spr "..hsp2,2,112,7)
	end -- end if mcollide
		
	-- print right collision info
	if mcollide(plyr,"right",solid) then 
		print("collision on right with spr "..hsp2,2,112,7)
	end -- end if mcollide
		
	-- print down collision info
	if mcollide(plyr,"down",solid)
 	and not btn(2)
 	then 
		print("collision below with spr "..hsp1,2,120,7)
	end -- end if map collision
	
	-- print up collision info
	if mcollide(plyr,"up",solid)
	and (plyr.dy < 0 or btn(2))
	then 
		print("collision above with spr "..hsp1,2,120,7)
	end -- end if map collision
	
end -- end _draw()
-->8
-- player functions

-- make player
function make_plyr()
	
	-- create new player table
	plyr={} 
	
	-- big sprite (24x24 pixels)
	if big then
	
		plyr.n=64 -- sprite number
		plyr.w=24 -- width in pixels
		plyr.h=24 -- height in pixels
	
	-- small sprite (8x8 pixels)
	else
		plyr.n=1 -- sprite number
		plyr.w=8 -- width in pixels
		plyr.h=8 -- height in pixels
	end -- end if big

 	-- pixel position 
	plyr.x=16
	plyr.y=64 
	
	-- width/height for sprite
	-- function requires a tile
	-- value (8 pixels per tile)	
	plyr.sw=plyr.w/8
	plyr.sh=plyr.h/8

	-- whether to flip the sprite
	-- horizontally
	plyr.flip=false
	
	-- change in x,y
	plyr.dx=0
	plyr.dy=0

	-- speed in x,y directions
	plyr.xspd=0.5
	plyr.yspd=4

	-- whether the player has
	-- landed (this will be set
	-- to true when there is
	-- collision with a map tile
	-- below the player)
	plyr.landed=false
	
end -- end make_plyr()

-- move player
function move_plyr()
	
	-- dx and dy are used to 
	-- calculate how much the
	-- player will move each frame
	
	-- multiplying dx by a friction
	-- value less than 1 slows it
	plyr.dx*=fric 
	
	-- inc change in y by gravity
	-- to make player fall
	plyr.dy+=grav 
	
	-- the player's x and y values
	-- must be incremented by dx
	-- and dy, respectively, at
	-- the end of this function
	-- in order to move
	
	-- hold left arrow
	if btn(‚¨ÖÔ∏è) then 
	
		-- substract from change in x
		-- to move left
		plyr.dx-=plyr.xspd
		
		-- flip player sprite since
		-- it faces right by default
		plyr.flip=true
		
	end -- end if btn(‚¨ÖÔ∏è)

	-- hold right arrow
	if btn(‚û°Ô∏è) then 
	
		-- add to change in x to
		-- move right
		plyr.dx+=plyr.xspd
		
		-- unflip the sprite in case
		-- the player had been
		-- moving left
		plyr.flip=false
		
	end -- end if btn(‚û°Ô∏è)

	-- press up or x to jump
	-- (btnp does not require key
	-- to be held down)
	if (btnp(‚¨ÜÔ∏è) or btnp(‚ùé))
	
	-- w/o the second condition,
	-- the player would be able 
	-- to jump indefinitely
 	and plyr.landed then
 
		-- subtract from change in y
		-- to move up on the screen
		plyr.dy-=plyr.yspd
		
		-- set boolean to false to
		-- prevent double jump
		plyr.landed=false
		
	end -- end if btnp(‚¨ÜÔ∏è/‚ùé)

	-- determine tile coordinates
	-- for player position
	-- (tiles are 8x8 pixels)
	plyr.tile_x=flr(plyr.x/8)
	plyr.tile_y=flr(plyr.y/8)

	-- collide with wall on left
	if mcollide(plyr,"left",solid)
	
	-- allows movement to right
	and not btn(‚û°Ô∏è)
	
	then
		plyr.dx=0 -- stop moving l/r
	end -- end if mcollide

 	-- collide with wall on right
	if mcollide(plyr,"right",solid)
	
	-- allows movement to left
	and not btn(‚¨ÖÔ∏è)
	
	then
		plyr.dx=0 -- stop moving l/r
	end -- end if mcollide

	-- if dy is positive, the 
	-- player is moving down
	-- (falling), so they have
	-- not landed yet
	if plyr.dy>0 then	
		plyr.landed=false 
	end -- end if dy>0

	-- stop falling when touching
	-- a solid tile below player
	if mcollide(plyr,"down",solid)
	and plyr.dy > 0
	then
		plyr.landed=true
		plyr.dy=0 -- stop falling
		
		-- because of vertical speed,
		-- the player can fall a few
		-- px into the floor. this
		-- calculates how many px and
		-- re-adjusts y (credit to 
		-- nerdyteachers.com for this
		-- formula)
		plyr.y-=
		((plyr.y+plyr.h+1)%8)-1

	end -- end if mcollide down
	
	-- stop moving up when there's
	-- collision with solid tile
	-- above the player
	if mcollide(plyr,"up",solid)
	and plyr.dy < 0
	then
		plyr.landed=false 
		plyr.dy=0 -- stop jumping
	end -- end if mcollide up

	-- update x and y positions by
	-- the change calculated
	plyr.x+=plyr.dx
	plyr.y+=plyr.dy
 
	-- keep player on screen
	if plyr.x<0 then 
		plyr.x=0
	end -- end if x<0

end -- end move_player()
-->8
-- map collision function
function mcollide(obj,dir,flag)
	
	-- this function checks two
	-- points on the tile adjacent
	-- to the  player: hx1,hy1 and
	-- hx2,hy2	-- we can then use
	-- these coordinates to look up
	-- the adjacent tile's sprite
	-- number and whether it has
	-- a flag turned on
	
	-- position of tile to left
	if dir=="left" then 
		hx1=obj.x-1
		hy1=obj.y

		hx2=hx1
		hy2=obj.y+obj.h-1
		
	-- position of tile to right
	elseif dir=="right" then 
		hx1=obj.x+obj.w
		hy1=obj.y

		hx2=hx1 
		hy2=obj.y+obj.h-1
	
	-- position of tile above
	elseif dir=="up" then 
		hx1=obj.x
		hy1=obj.y-1

		hx2=obj.x+obj.w-1 
		hy2=hy1 
		
	-- position of tile below
	elseif dir=="down" then 
		hx1=obj.x
		hy1=obj.y+obj.h

		hx2=obj.x+obj.w-1
		hy2=hy1
	end -- end if/elseif

	-- get sprite number of
	-- adjacent tile (divide by 8
	-- to convert from pixel
	-- coordinate to tile coordinate)
	hsp1=mget(flr(hx1/8),flr(hy1/8)) 
	hsp2=mget(flr(hx2/8),flr(hy2/8)) 

	-- check flag on sprite for 
	-- adjacent tile
	local has_flag1=fget(hsp1,flag) 
	local has_flag2=fget(hsp2,flag) 

	if has_flag1 or has_flag2 then
		return true
	else
		return false
	end -- end if/else

end -- end mcollide()

-- use this function in
-- move_plyr() -- for example:
-- if mcollide(plyr,"down",0)
-- checks for flag 0 below the
-- player

-- this function draws two dots
-- on the tile adjacent to the
-- player, depending on which
-- direction they are moving
function set_hitbox()

	-- position of tile to left
	if btn(‚¨ÖÔ∏è) then 
		hx1=plyr.x-1
		hy1=plyr.y

		hx2=hx1 
		hy2=plyr.y+plyr.h-1
		
	-- position of tile to right
	elseif btn(‚û°Ô∏è) then 
		hx1=plyr.x+plyr.w
		hy1=plyr.y

		hx2=hx1 
		hy2=plyr.y+plyr.h-1
	
	-- position of tile above
	elseif btn(‚¨ÜÔ∏è) or btn(‚ùé) then 
		hx1=plyr.x
		hy1=plyr.y-1

		hx2=plyr.x+plyr.w-1 
		hy2=hy1 
		
	-- position of tile below
	else 
		hx1=plyr.x
		hy1=plyr.y+plyr.h

		hx2=plyr.x+plyr.w-1
		hy2=hy1
	end -- end if/elseif

	-- get sprite number of
	-- adjacent tile (divide by 8
	-- to convert from pixel
	-- coordinate to tile coordinate)
	hsp1=mget(flr(hx1/8),flr(hy1/8)) 
	hsp2=mget(flr(hx2/8),flr(hy2/8)) 

end -- end set_hitbox()
-->8
-- swap sprite function
function swap_sprite()

	-- map and sprite widths
	map_end = 120
	sm_spr = 8
	lg_spr = 24
	
	-- size difference
	diff = lg_spr-sm_spr

	-- press z/c to swap sprite
	if btnp(üÖæÔ∏è) then
	
		-- store player location
		temp_x=plyr.x
		temp_y=plyr.y
		
		-- big to small
		if big==true then
			big = false
			temp_y+=diff -- adjust y pos
	  
		-- small to big
		elseif big==false then
			big=true
			temp_y-=diff -- adjust y pos
	  
			-- right edge correction
			if plyr.x>=map_end-lg_spr
			then
				temp_x-=lg_spr+plyr.x-map_end
			end -- end if x>map_end-lg_spr
	  
		end -- end if big t/f
	 
		-- re-make player to apply
		make_plyr()
	 
		-- adjust player position
		plyr.x=temp_x
		plyr.y=temp_y
	 
	end -- end if btnp(üÖæÔ∏è)
	
end -- end swap_sprite()
__gfx__
0000000000666600bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000aaaaaaaaaaaaaaaaaaaaaaaa000000000000000077777777777777777777777700000000
0000000006aaaa60bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000aaaaaaaaaaaaaaaaaaaaaaaa000000000000000077777777777777777777777700000000
007007006aaaa0a63333333333333333333333330000000000000000999999999999999999999999000000000000000066666666666666666666666600000000
000770006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
000770006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
007007006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
0000000006aaaa603444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
00000000006666003444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
00000000bbbbbbbb344444444444444444444443bbbbbbbbaaaaaaaa944444444444444444444449aaaaaaaa7777777761111111111111111111111677777777
00000000bbbbbbbb344444444444444444444443bbbbbbbbaaaaaaaa944444444444444444444449aaaaaaaa7777777761111111111111111111111677777777
00000000333333333444444444444444444444433333333399999999944444444444444444444449999999996666666661111111111111111111111666666666
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
0000000033333333cccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000c33ee33ccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cc3333cccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000000555500000000000000000000000000000000000000000088888888111111110000000000000000
00000000000000000000000000000000888888880000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888880000000000566500000000000707070700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000000707070700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000088888888000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
00000000000000000000000088888888000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
00000000000000000000000000066000000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccceeeeeeeeeeeeeeeecccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccceeeeeeeeeeeeeeeeeeccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee777eeeeeeee777eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee747eeeeeeee747eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee777eeeeeeee777eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeecccceeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeecccceeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeecceeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeee8eeeeeeeeee8eeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeee8eeeeeeeeee8eeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeee8888888888eeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccceeeeeeeeeeeeeeeeeeccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccceeeeeeeeeeeeeeeecccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010101000003030300000505050000010101010103030103030505000505004180000000010000000000808080000000000901000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000262626261818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000363636361818000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000002600000000000000000000000000000026000000000000000000000000000000260000000000000000000000000000002600000000000000000000000000000000
0000000000000000000000363636361818000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000036000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000000
0e00000000000708090000363636361818000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000036000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000038
1e03030303031213140303030303030303031111110303030311111111000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1d13131313131313131313131313131313131313131313131313131313000000001313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
1d13131313131313131313131313131313131313131313131313131313000000001313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
1d131313131313131313131313131313131313131313131313131313132e2e2e2e1313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
__sfx__
000100002355023550235502b5502b5502b55000000000002d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000260502e050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002d0502d050270502605021050200501b05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001605007050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002073027750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002405020050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001005010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
