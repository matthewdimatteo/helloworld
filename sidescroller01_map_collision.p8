pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- game loop

-- runs once at start
function _init()

	-- global variables and objects
	solid=0 -- map tile flag
	big=false -- 8x8px sprite if false; 24x24px sprite if true
	make_player() -- object initialization

	-- physics forces
	gravity=0.3
	friction=0.85

	-- test-hitbox coordinates
	hx1=0
	hy1=0
	hx2=0
	hy2=0
	hsp1=0
	hsp2=0

end -- end _init()

-- runs 30x per second
function _update()
	swap_sprite()	
	move_player()
	set_hitbox() -- set hitbox x,y coordinates
end -- end _update()

-- runs 30x per second
function _draw()
 	cls() -- clear screen
	map() -- draw the map
	spr(player.sp,player.x,player.y,player.sw,player.sh,player.flip) -- draw player

	-- instructions: z to swap player sprite
	if big==false then
		print("press z for big plyr sprite",2,2,7)
	elseif big==true then
		print("press z for small plyr sprite",2,2,7)
	end
		
	-- print player pixel and tile position
	print("pixel:  "..flr(player.x)..","..flr(player.y),2,10,10)
	if player.tile_x 
	and player.tile_y then
		print("tile:   "..player.tile_x..","..player.tile_y,2,18,10)
	end -- end if

	-- draw collision hitboxes
	rect(hx1,hy1,hx1,hy1,8) 
	rect(hx2,hy2,hx2,hy2,8)

	-- print left collision info
	if map_collision(player,"left",solid) then 
		print("collision on left with spr "..hsp2,2,112,7)
	end -- end if map_collision
		
	-- print right collision info
	if map_collision(player,"right",solid) then 
		print("collision on right with spr "..hsp2,2,112,7)
	end -- end if map_collision
		
	-- print down collision info
	if map_collision(player,"down",solid)
 	and not btn(2)
 	then 
		print("collision below with spr "..hsp1,2,120,7)
	end -- end if map collision
	
	-- print up collision info
	if map_collision(player,"up",solid)
	and (player.dy < 0 or btn(2))
	then 
		print("collision above with spr "..hsp1,2,120,7)
	end -- end if map collision
	
end -- end _draw()
-->8

-- player
function make_player()
	player={} -- create new player table

	if big then 
		player.x=16 -- player x position in pixels
		player.y=64 -- player y position in pixels
		player.sp=64 -- player sprite number
		player.w=24 -- width of sprite artwork in pixels
		player.h=24 -- height of sprite artwork in pixels
		player.sw=3 -- number of sprite tiles to draw horizontally
		player.sh=3 -- number of sprite tiles to draw vertically
	else
		player.x=16 -- player x position in pixels
		player.y=88 -- player y position in pixels
		player.sp=1 -- player sprite number
		player.w=8 -- width of sprite artwork in pixels
		player.h=8 -- height of sprite artwork in pixels
		player.sw=1 -- number of sprite tiles to draw horizontally
		player.sh=1 -- number of sprite tiles to draw vertically
	end -- end if big

	player.flip=false
	player.dx=0
	player.dy=0
	player.max_dx=2
	player.max_dy=3
	player.x_acc=0.5
	player.y_acc=4
	player.running=false
	player.jumping=false
	player.falling=false
	player.landed=false
	player.facing="right"
end -- end make_player()

-- move player
function move_player()
 	player.dy+=gravity  -- increase y speed by gravity
	player.dx*=friction -- if friction <1, multiplication reduces change in x
 
	-- hold left
	if btn(0) then 
		player.dx-=player.x_acc
		player.running=true
		player.flip=true
		player.facing="left"
	end -- end if btn(0)

	-- hold right
	if btn(1) then 
		player.dx+=player.x_acc
		player.running=true
		player.flip=false
		player.facing="right"
	end -- end if btn(1)

	-- press up or x to jump
	--  requiring player.landed means player must be on ground to jump, not in air
	if (btnp(2) or btnp(5)) and player.landed then
		player.dy-=player.y_acc
		player.landed=false
	end -- end if btn(2/5)

	-- determine tile coordinates for player position (tiles are 8x8 pixels)
	player.tile_x=flr(player.x/8)
	player.tile_y=flr(player.y/8)

	-- collide with wall on left
	if map_collision(player,"left",solid)
	and not btn(1)
	then
		player.dx=0
	end -- end if map_collision

 	-- collide with wall on right
	if map_collision(player,"right",solid)
	and not btn(0)
	then
		player.dx=0 
		player.x-=((player.x+player.w+1)%8)-1 -- correct x position if stuck in wall 
	end -- end if map_collision

	-- handle falling (if dy is positive, the player is moving lower)
	if player.dy>0 then	 
 		player.falling=true 
  		player.landed=false 
  		player.jumping=false
	elseif player.dy<0 then
		player.jumping=true -- if dy is negative, the player is jumping
	end -- end if/elseif dy<>0

	-- stop falling when touching
	-- a solid tile below player
	if map_collision(player,"down",solid)
	and player.dy > 0
	then
		player.landed=true 
		player.falling=false
		player.dy=0 -- stop falling
		
		-- because of dy momentum, the player can fall a few px into the floor
		-- this calculates how many px and re-adjusts y
		player.y-=((player.y+player.h+1)%8)-1

	end -- end if map_collision down
	
	-- stop moving up when collision with solid tile above player
	if map_collision(player,"up",solid)
	and player.dy < 0
	then
		player.landed=false 
		player.falling=true
		player.dy=0 -- stop jumping
 	end -- end if map_collision up

	-- update x and y positions by the change calculated
	player.x+=player.dx
	player.y+=player.dy
 
 	-- constrain player to edges of screen
	if player.x<0 then 
		player.x=0
	end -- end if x<0
	
	if player.x>120 then
	 	player.x = 120
	end -- end if x>120

end -- end move_player()
-->8

-- map collision
function map_collision(obj,dir,flag)
	
	-- this function checks two points on the tile adjacent to the player: hx1,hy1 and hx2,hy2
	-- we can then use these coordinates to look up the adjacent tile's sprite number and whether it has a flag
	
	-- position of tile to left
	if dir=="left" then 
		hx1=obj.x-1
		hy1=obj.y

		hx2=hx1
		hy2=obj.y+obj.h-1
		
	-- position of tile to right
	elseif dir=="right" then 
		hx1=obj.x+obj.w
		hy1=obj.y

		hx2=hx1 
		hy2=obj.y+obj.h-1
	
	-- position of tile above
	elseif dir=="up" then 
		hx1=obj.x
		hy1=obj.y-1

		hx2=obj.x+obj.w-1 
		hy2=hy1 
		
	-- position of tile below
	elseif dir=="down" then 
		hx1=obj.x
		hy1=obj.y+obj.h

		hx2=obj.x+obj.w-1
		hy2=hy1
	end -- end if/elseif

	-- get sprite number of adjacent tile (divide by 8 to convert from pixel coordinate to tile coordinate)
	hsp1=mget(flr(hx1/8),flr(hy1/8)) 
	hsp2=mget(flr(hx2/8),flr(hy2/8)) 

	-- check flag on sprite for adjacent tile
	local has_flag1=fget(hsp1,flag) 
	local has_flag2=fget(hsp2,flag) 

	if has_flag1 or has_flag2 then
		return true
	else
		return false
	end -- end if/else

end -- end map_collision()
-- use this function inside move_player()
-- for example: if map_collision(player,"down",0) checks for flag 0 below player

-- this function draws two dots on the tile adjacent to the player, depending on which direction they are moving
function set_hitbox()

	-- position of tile to left
	if btn(0) then 
		hx1=player.x-1
		hy1=player.y

		hx2=hx1 
		hy2=player.y+player.h-1
		
	-- position of tile to right
	elseif btn(1) then 
		hx1=player.x+player.w
		hy1=player.y

		hx2=hx1 
		hy2=player.y+player.h-1
	
	-- position of tile above
	elseif btn(2) or btn(5) then 
		hx1=player.x
		hy1=player.y-1

		hx2=player.x+player.w-1 
		hy2=hy1 
		
	-- position of tile below
	else 
		hx1=player.x
		hy1=player.y+player.h

		hx2=player.x+player.w-1
		hy2=hy1
	end -- end if/elseif

	-- get sprite number of adjacent tile (divide by 8 to convert from pixel coordinate to tile coordinate)
	hsp1=mget(flr(hx1/8),flr(hy1/8)) 
	hsp2=mget(flr(hx2/8),flr(hy2/8)) 

end -- end set_hitbox()
-->8

-- press z to swap sprite
function swap_sprite()
	if btnp(4) then
	
	 -- store player location
	temp_x=player.x
	temp_y=player.y
		
		-- big to small
	 if big==true then
		big = false
	  	temp_y+=16 -- adjust y pos
	  
	 -- small to big
	 elseif big==false then
	  	big=true
	  	temp_y-=16 -- adjust y pos
	  
	  	-- right edge correction
	  	if player.x>=96 then
	   		temp_x-=(24+player.x-120)
	  	end -- end if x>96
	  
	 end -- end if big t/f
	 
	 -- re-make player to apply
	 make_player()
	 
	 -- adjust player position
	 player.x=temp_x
	 player.y=temp_y
	 
	end -- end if btnp(4)
end -- end swap_sprite()
__gfx__
0000000000666600bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000aaaaaaaaaaaaaaaaaaaaaaaa000000000000000077777777777777777777777700000000
0000000006aaaa60bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000aaaaaaaaaaaaaaaaaaaaaaaa000000000000000077777777777777777777777700000000
007007006aaaa0a63333333333333333333333330000000000000000999999999999999999999999000000000000000066666666666666666666666600000000
000770006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
000770006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
007007006aaaaaa63444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
0000000006aaaa603444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
00000000006666003444444444444444444444430000000000000000944444444444444444444449000000000000000061111111111111111111111600000000
00000000bbbbbbbb344444444444444444444443bbbbbbbbaaaaaaaa944444444444444444444449aaaaaaaa7777777761111111111111111111111677777777
00000000bbbbbbbb344444444444444444444443bbbbbbbbaaaaaaaa944444444444444444444449aaaaaaaa7777777761111111111111111111111677777777
00000000333333333444444444444444444444433333333399999999944444444444444444444449999999996666666661111111111111111111111666666666
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
00000000444444444444444444444444444444444444444444444444444444444444444444444444444444441111111111111111111111111111111111111111
0000000033333333cccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000c33ee33ccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cc3333cccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000066666666000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000055555555000000000000000000000000000000000000000088888888111111110000000000000000
00000000cccccccccccccccc00000000000000000000000000555500000000000000000000000000000000000000000088888888111111110000000000000000
00000000000000000000000000000000888888880000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888880000000000566500000000000707070700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000000707070700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000660000000000000566500000000007070707000000000000000000000000000000000000000000000000000000000
00000000000000000000000088888888000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
00000000000000000000000088888888000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
00000000000000000000000000066000000660000000000000566500000000000006600000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccceeeeeeeeeeeeeeeecccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccceeeeeeeeeeeeeeeeeeccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee777eeeeeeee777eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee747eeeeeeee747eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceee777eeeeeeee777eeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeecccceeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeecccceeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeecceeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeee8eeeeeeeeee8eeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeee8eeeeeeeeee8eeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeee8888888888eeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cceeeeeeeeeeeeeeeeeeeecc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccceeeeeeeeeeeeeeeeeeccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccceeeeeeeeeeeeeeeecccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010101000003030300000505050000010101010103030103030505000505004180000000010000000000808080000000000901000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000262626261818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000363636361818000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000002600000000000000000000000000000026000000000000000000000000000000260000000000000000000000000000002600000000000000000000000000000000
0000000000000000000000363636361818000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000036000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000000
0e00000000000708090000363636361818000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000036000000000000000000000000000000360000000000000000000000000000003600000000000000000000000000000038
1e03030303031213140303030303030303031111110303030311111111000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1d13131313131313131313131313131313131313131313131313131313000000001313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
1d13131313131313131313131313131313131313131313131313131313000000001313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
1d131313131313131313131313131313131313131313131313131313132e2e2e2e1313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313
__sfx__
000100002355023550235502b5502b5502b55000000000002d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000260502e050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002d0502d050270502605021050200501b05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001605007050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002073027750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002405020050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001005010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
