pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- spaceshooter series
-- example 01: input and movement
-- by matthew dimatteo

-- tab 0: game loop
-- tab 1: make_plyr()
-- tab 2: move_plyr()

function _init()
	friction = 0.9
	make_plyr()
end

function _update()
	move_plyr()
end

function _draw()
	cls()
	print("press x for turbo boost")
	spr(plyr.n,plyr.x,plyr.y,1,1,plyr.flpx,plyr.flpy)
	-- spr() takes additional 
	-- values after sprite#,x,y
	-- 1,1 here are the number of
	-- tiles on the spritesheet to
	-- use(horizontally, vertically)
	-- flpx and flpy automatically
	-- flip the sprite when set to
	-- true, so you don't need to 
	-- draw mirrored sprites
end
-->8
-- make_plyr
function make_plyr()
	plyr = {}
	plyr.n = 1
	plyr.x = 60
	plyr.y = 60
	plyr.w = 8
	plyr.h = 8
	plyr.flpx = false
	plyr.flpy = false
	plyr.dx = 0
	plyr.dy = 0
	plyr.spd = 0.2
end
-->8
-- move_plyr
function move_plyr()

	-- apply friction
	plyr.dx *= friction
	plyr.dy *= friction
 
	-- left arrow
	if btn(⬅️) then
		-- negative because x values 
		-- increase from left to right,
		-- so moving left will be a 
		-- smaller value
		plyr.dx -= plyr.spd 

		-- don't flip since plyr 
		-- sprite faces left by default
		plyr.flpx = false
    
		-- horizontal sprite
		if btn(❎) then
			plyr.n = 34 -- turbo sprite
			sfx(1) -- turbo sound
		else
			plyr.n = 2 -- default sprite
		end -- end if btn(❎)
        
	end -- end if btn(⬅️)
    
	-- right arrow
	if btn(➡️) then

		-- positive because x values 
		-- increase from left to right
		-- so moving right will be a
		-- larger value
		plyr.dx += plyr.spd

		-- flip the sprite (left-facing 
		-- by default) to face right 
		-- while moving right
		plyr.flpx = true
    
		-- horizontal sprite
		if btn(5) then
			plyr.n = 34 -- turbo sprite
			sfx(1) -- turbo sound
		else
			plyr.n = 2 -- default sprite
		end -- end if btn(5)
        
	end -- end if btn(➡️)
    
	-- up arrow
	if btn(⬆️) then

		-- negative because y values
		-- increase going lower on the 
		-- screen, so moving up will be
		-- a smaller value
		plyr.dy -= plyr.spd

		-- don't flip since plyr sprite
		-- faces up by default
		plyr.flpy = false
    
		-- vertical sprite
		if btn(❎) then
			plyr.n = 33 -- turbo sprite
			sfx(1) -- turbo sound
		else
			plyr.n = 1 -- default sprite
		end -- end if btn(5)
        
	end -- end if btn(⬆️)
    
	-- down arrow
	if btn(⬇️) then

		-- positive because y values
		-- increase going lower on screen,
		-- so moving down will be a 
		-- larger value
		plyr.dy += plyr.spd

		-- flip the sprite (up-facing by
		-- default) to face down while 
		-- moving down
		plyr.flpy = true
    
		-- vertical sprite
		if btn(❎) then
			plyr.n = 33 -- turbo sprite
			sfx(1) -- turbo sound
		else
			plyr.n = 1 -- default sprite
		end -- end if btn(❎)
        
	end -- end if down arrow
    
	-- update position (dx and dy 
	-- calculated based on which 
	-- arrow key is pressed)
	plyr.x += plyr.dx
	plyr.y += plyr.dy

	-- keep on screen left
	if plyr.x < 0 then
		plyr.x = 0
	end
    
	-- keep on screen right (factor
	-- in sprite's width)
	if plyr.x > 128-plyr.w then
		plyr.x = 128-plyr.w
	end
    
	-- keep on screen top
	if plyr.y < 0 then
		plyr.y = 0
	end
    
	-- keep on screen bottom
	-- (factor in sprite's height)
	if plyr.y > 128-plyr.h then
		plyr.y = 128-plyr.h
	end
    
	-- press x for turbo boost
	if btn(❎) then
		-- increased turbo speed
		plyr.spd = 1 
	else
		-- default speed same 
		-- as in make_plyr()
		plyr.spd = 0.2 
	end -- end if btn(❎)

end -- end move_plyr()
__gfx__
00000000000cc000000000cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000cc0000000cccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000cccc0000cccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700000cccc00cccccccc000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000cccccc0cccccccc000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000cccccc000cccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc0000cccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc000000cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880000000008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880000000888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008888000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008888008888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888808888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888800088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880000888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880000008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000990000000009900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000990000000999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009999000099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009999009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099999909999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099999900099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000999999990000999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000999999990000009900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000292502c2502f2503125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200002a7502c7502f750317502c700307003370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500000f05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
