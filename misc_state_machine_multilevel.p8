pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- multilevel state machine
-- by matthew dimatteo

-- tab 0: game loop
-- tab 1: start screen functions
-- tab 2: level 1 functions
-- tab 3: level 2 functions
-- tab 4: level 3 functions
-- tab 5: end screen functions
-- tab 6: player move function

-- runs once at start
-- variables, objects
function _init()
	init_start() -- set state to 0
end -- /function _init()

-- runs 30x/sec
-- movement, calculation
function _update()

	-- run the update function for
	-- whichever state it is
	if state == 0 then
		update_start()
	elseif state == 1 then
		update_level1()
	elseif state == 2 then
		update_level2()
	elseif state == 3 then
		update_level3()
	elseif state == 4 then
		update_end()
	end -- /if-elseif state

end -- /function _update()

-- runs 30x/sec
-- output/graphics
function _draw()
	
	-- run the corresponding 
	-- draw function for whichever
	-- state it is
	if state == 0 then
		draw_start()
	elseif state == 1 then
		draw_level1()
	elseif state == 2 then
		draw_level2()
	elseif state == 3 then
		draw_level3()
	elseif state == 4 then
		draw_end()
	end -- /if-elseif state

end -- /function _draw()
-->8
-- start-screen functions
function init_start()
	state = 0
	score = 0
end --/function init_menu()

function update_start()

	-- set state to 1, and position 
	-- player and camera
	if btnp(‚ùé) then
		init_level1()
	end -- /if btnp(‚ùé)

end -- /function update_menu()

function draw_start()
	cls() -- refresh screen
	print("press x to start",32,62,10) -- draw start screen
end -- /function draw_menu()
-->8
-- level 1 functions
function init_level1()
	state = 1 -- set state
	plyr = {} -- create plyr table

	-- position player and camera
	plyr.x = 2*8 -- 16 pixels
	plyr.y = 2*8 -- 16 pixels
	camx = 0
	camy = 0
end -- /function init_level1()

function update_level1()

	-- call plyr move function
	move() -- tab 6

	-- press z to go back a screen
	if btnp(üÖæÔ∏è) then
		init_start() -- set state to 0
	end -- /if btnp(üÖæÔ∏è)

	-- press x to advance a screen
	if btnp(‚ùé) then
		-- set state and reposition
		-- player and camera
		init_level2() -- tab 3
	end -- /if btnp(‚ùé)

end -- /function update_level1()

function draw_level1()
	cls() -- refresh screen
	map() -- draw map
	camera(camx,camy) --set camera
	spr(1,plyr.x,plyr.y)--draw plyr
    
    -- print step count/score
	print("steps: "..score,camx+2,camy+120,0)

	-- print the state and controls
	print(state,camx+2,camy+2,0) 
	print("üÖæÔ∏è=menu, ‚ùé=level 2", camx+30,camy+2,0)
end -- /function draw_level1()
-->8
-- level 2 functions
function init_level2()
	state = 2 -- set state
	plyr = {} -- create plyr table

	-- position player and camera
	plyr.x = 24*8 -- 192 pixels
	plyr.y = 12*8 -- 96 pixels
	camx = 16*8 -- 144 pixels
	camy = 0
end -- /function init_level2()

function update_level2()

	-- call plyr move function
	move() -- tab 6
    
	-- press z to go back a screen
	if btnp(üÖæÔ∏è) then
		-- set state and reposition
		-- player and camera
		init_level1()
	end -- /if btnp(üÖæÔ∏è)

	-- press x to advance a screen
	if btnp(‚ùé) then
		-- set state and reposition
		-- player and camera
		init_level3()
	end -- /if btnp(‚ùé)

end -- /update_level2()

function draw_level2()
	cls() -- refresh screen
	map() -- draw map
	camera(camx,camy) --set camera
	spr(1,plyr.x,plyr.y)--draw plyr
    
    -- print step count/score
	print("steps: "..score,camx+2,camy+120,0)

	-- print the state and controls
	print(state,camx+2,camy+2,0) 
	print("üÖæÔ∏è=level 1, ‚ùé=level 3", camx+20,camy+2,0)
end -- /function draw_level2()
-->8
-- level 3 functions
function init_level3()
	state = 3 -- set state
	plyr = {} -- create plyr table

	-- position player and camera
	plyr.x = 46*8 -- 368 pixels
	plyr.y = 7*8 -- 56 pixels
	camx = 32*8 -- 256 pixels
	camy = 0
end -- /function init_level3() 

function update_level3()

	-- call plyr move function
	move() -- tab 6

	-- press z to go back a screen
	if btnp(üÖæÔ∏è) then
		-- set state and reposition
		-- player and camera
		init_level2()
	end -- /if btnp(üÖæÔ∏è)

	-- press x to advance a screen
	if btnp(‚ùé) then
		-- set state and reposition
		-- player and camera
		init_end()
	end -- /if btnp(‚ùé)

end -- /function update_level3()

function draw_level3()
	cls() -- refresh screen
	map() -- draw map
	camera(camx,camy) --set camera
	spr(1,plyr.x,plyr.y)--draw plyr
    
	-- print step count/score
	print("steps: "..score,camx+2,camy+120,0)

	-- print the state and controls
	print(state,camx+2,camy+2,0) 
	print("üÖæÔ∏è=level 2, ‚ùé=quit", camx+25,camy+2,0)
end -- /function draw_level3()
-->8
-- end-screen functions
function init_end()
	state = 4

	-- store and reset the score
	finalscore = score
	score = 0
end -- /function init_end()

function update_end()

	-- press z to return to menu
	if btnp(üÖæÔ∏è) then 
		init_start() -- set state to 0
	end -- /if btnp(üÖæÔ∏è)

	-- press x to restart level 1
	if btnp(‚ùé) then 
		-- set state and reposition
		-- player and camera
		init_level1()
	end -- /if btnp(‚ùé)

end -- /function update_end()

function draw_end()
	cls() -- refresh screen
	camera(0,0) -- reset camera

	-- draw end screen
	print("game over!",45,40,8)
	print("steps taken: "..finalscore,35,50,10)
	print("press x to restart",28,70,7)
	print("z to return to title screen",11,80,7)
end -- /function draw_end()
-->8
-- player move function
function move()

	speed = 2 -- 2 px per btn press

	-- move left
	if btnp(‚¨ÖÔ∏è) then
		plyr.x -= speed
		sfx(0)
		score += 1
	
	-- move right
	elseif btnp(‚û°Ô∏è) then
		plyr.x += speed
		sfx(0)
		score += 1
	end -- /if btnp(‚û°Ô∏è)
    
	-- move up
	if btnp(‚¨ÜÔ∏è) then
		plyr.y -= speed
		sfx(0)
		score += 1
	
	-- move down
	elseif btnp(‚¨áÔ∏è) then
		plyr.y += speed
		sfx(0)
		score += 1
	end -- /btnp(‚¨áÔ∏è)
    
end -- /function move()
__gfx__
00000000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700cc7cc7cc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700cc777ccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc66666666eeeeeeee999999991111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030305050505050303030303040404040404050505050505040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030303030303050303030303040404040404040404040405040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030303030303050303030303040404040404040404040405040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030305050505050303030303040404040404040405050505040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030305030303030303030303040404040404040404040405040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030305030303030303030303040404040404040404040405040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020205020202020202020203030303030305050505050303030303040404040404050505050505040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020203030303030303030303030303030303040404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001d05020050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
